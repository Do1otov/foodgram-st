name: Foodgram CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return
          pip install -r backend/requirements.txt

      - name: Run flake8
        run: flake8 backend/

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install frontend deps and build
        run: |
          cd frontend
          npm ci --legacy-peer-deps
          CI=false npm run build

  push-backend-image:
    name: Push backend image to Docker Hub
    runs-on: ubuntu-latest
    needs: [flake8, frontend-build]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: push-backend-image
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/infra/
            docker compose stop
            docker compose rm -f foodgram-back
            docker image prune -f
            docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest
            docker compose up -d --build
            docker compose exec -T backend python manage.py migrate
            docker compose exec -T backend python manage.py collectstatic --no-input

  notify:
    name: Notify via Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Foodgram успешно задеплоен на сервер!
